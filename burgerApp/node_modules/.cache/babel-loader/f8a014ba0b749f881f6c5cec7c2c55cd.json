{"ast":null,"code":"var _jsxFileName = \"/Users/abdessamad/workspace/ReactJs/appone/src/components/Todo.js\";\nimport React, { useState, useEffect, useReducer, useR } from 'react';\nimport axios from 'axios';\n\nconst Todo = props => {\n  const [todoName, setTodoName] = useState(''); //useState instead useReducer\n  //const [todoList, setTodoList] = useState([]);\n  //const [submittedTodo, setSubmittedTodo] = useState(null);\n\n  const todoListReducer = (state, action) => {\n    switch (action.type) {\n      case 'ADD':\n        return state.concat(action.payload);\n\n      case 'SET':\n        return action.payload;\n\n      case 'REMOVE':\n        return state.filter(todo => todo.id !== action.payload);\n\n      default:\n        return state;\n    }\n  };\n\n  const [todoList, dispatch] = useReducer(todoListReducer, []);\n  useEffect(() => {\n    axios.get('https://todo-list-bb387.firebaseio.com/todos.json').then(result => {\n      console.log(result);\n      const todoData = result.data;\n      const todos = [];\n\n      for (const key in todoData) {\n        todos.push({\n          id: key,\n          name: todoData[key].name\n        });\n      } //useState unstead useReducer\n      //setTodoList(todos);\n      //using useReducer\n\n\n      dispatch({\n        type: 'SET',\n        payload: todos\n      });\n    });\n    return () => {\n      console.log('Cleanup');\n    };\n  }, []); //useState instead useReducer\n\n  /* useEffect(() => {\n      if (submittedTodo)\n          //using useState\n          //setTodoList(todoList.concat(submittedTodo));\n           dispatch({ type: 'ADD', payload: submittedTodo });\n  }, [submittedTodo]); */\n\n  const inputChangeHandler = event => {\n    setTodoName(event.target.value);\n  };\n\n  const todoAddHandler = () => {\n    axios.post('https://todo-list-bb387.firebaseio.com/todos.json', {\n      name: todoName\n    }).then(res => {\n      console.log(res);\n      setTimeout(() => {\n        const todoItem = {\n          id: res.data.name,\n          name: todoName\n        }; //useState instead useReducer\n        //setSubmittedTodo(todoItem);\n\n        dispatch({\n          type: 'ADD',\n          payload: todoItem\n        });\n      }, 3000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const todoRemoveHandler = todoId => {\n    axios.delete(`https://todo-list-bb387.firebaseio.com/todos/${todoId}.json`).then(res => {\n      dispatch({\n        type: 'REMOVE',\n        payload: todoId\n      });\n      console.log(res);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Todo\",\n    onChange: inputChangeHandler,\n    value: todoName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: todoAddHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, todoList.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    key: todo.id,\n    onClick: todoRemoveHandler.bind(this, todo.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, todo.name))));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/abdessamad/workspace/ReactJs/appone/src/components/Todo.js"],"names":["React","useState","useEffect","useReducer","useR","axios","Todo","props","todoName","setTodoName","todoListReducer","state","action","type","concat","payload","filter","todo","id","todoList","dispatch","get","then","result","console","log","todoData","data","todos","key","push","name","inputChangeHandler","event","target","value","todoAddHandler","post","res","setTimeout","todoItem","catch","err","todoRemoveHandler","todoId","delete","map","bind"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useR } from 'react';\nimport axios from 'axios';\n\nconst Todo = props => {\n    const [todoName, setTodoName] = useState('');\n\n    //useState instead useReducer\n    //const [todoList, setTodoList] = useState([]);\n    //const [submittedTodo, setSubmittedTodo] = useState(null);\n\n    const todoListReducer = (state, action) => {\n        switch (action.type) {\n            case 'ADD':\n                return state.concat(action.payload);\n            case 'SET':\n                return action.payload;\n            case 'REMOVE':\n                return state.filter((todo) => todo.id !== action.payload);\n            default:\n                return state;\n        }\n    }\n\n    const [todoList, dispatch] = useReducer(todoListReducer, []);\n\n    useEffect(() => {\n        axios.get('https://todo-list-bb387.firebaseio.com/todos.json')\n            .then(result => {\n                console.log(result);\n\n                const todoData = result.data;\n                const todos = [];\n                for (const key in todoData) {\n                    todos.push({ id: key, name: todoData[key].name })\n                }\n\n                //useState unstead useReducer\n                //setTodoList(todos);\n\n                //using useReducer\n                dispatch({ type: 'SET', payload: todos });\n            });\n        return () => {\n            console.log('Cleanup')\n        }\n    }, []);\n\n    //useState instead useReducer\n    /* useEffect(() => {\n        if (submittedTodo)\n            //using useState\n            //setTodoList(todoList.concat(submittedTodo));\n\n            dispatch({ type: 'ADD', payload: submittedTodo });\n    }, [submittedTodo]); */\n\n\n    const inputChangeHandler = event => {\n        setTodoName(event.target.value);\n    }\n\n    const todoAddHandler = () => {\n        axios.post('https://todo-list-bb387.firebaseio.com/todos.json', { name: todoName })\n            .then(res => {\n                console.log(res);\n\n                setTimeout(() => {\n\n                    const todoItem = { id: res.data.name, name: todoName };\n\n                    //useState instead useReducer\n                    //setSubmittedTodo(todoItem);\n\n                    dispatch({type: 'ADD', payload: todoItem});\n                }, 3000);\n\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    const todoRemoveHandler = todoId => {\n        axios.delete(`https://todo-list-bb387.firebaseio.com/todos/${todoId}.json`)\n            .then(res => {\n                dispatch({ type: 'REMOVE', payload: todoId });\n                console.log(res);\n            })\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <React.Fragment>\n            <input type=\"text\" placeholder=\"Todo\" onChange={inputChangeHandler} value={todoName} />\n            <button type=\"button\" onClick={todoAddHandler}>Add</button>\n            <ul>\n                {todoList.map(todo => (\n                    <li key={todo.id} onClick={todoRemoveHandler.bind(this, todo.id)}>\n                        {todo.name}\n                    </li>\n                ))}\n            </ul>\n        </React.Fragment>\n    );\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}