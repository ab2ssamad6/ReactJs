{"ast":null,"code":"var _jsxFileName = \"/Users/abdessamad/workspace/ReactJs/appone/src/components/Todo.js\";\nimport React, { useState, useEffect, useReducer, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport List from './List';\nimport { useFormInput } from '../hooks/forms';\n\nconst Todo = props => {\n  //const [todoName, setTodoName] = useState('');\n  //useState instead useReducer\n  //const [todoList, setTodoList] = useState([]);\n  //const [submittedTodo, setSubmittedTodo] = useState(null);\n  const [inputIsValid, setInputIsValid] = useState(false);\n  const todoInputRef = useRef();\n\n  const todoListReducer = (state, action) => {\n    switch (action.type) {\n      case 'ADD':\n        return state.concat(action.payload);\n\n      case 'SET':\n        return action.payload;\n\n      case 'REMOVE':\n        return state.filter(todo => todo.id !== action.payload);\n\n      default:\n        return state;\n    }\n  };\n\n  const [todoList, dispatch] = useReducer(todoListReducer, []);\n  useEffect(() => {\n    axios.get('https://todo-list-bb387.firebaseio.com/todos.json').then(result => {\n      console.log(result);\n      const todoData = result.data;\n      const todos = [];\n\n      for (const key in todoData) {\n        todos.push({\n          id: key,\n          name: todoData[key].name\n        });\n      } //useState unstead useReducer\n      //setTodoList(todos);\n      //using useReducer\n\n\n      dispatch({\n        type: 'SET',\n        payload: todos\n      });\n    });\n    return () => {\n      console.log('Cleanup');\n    };\n  }, []); //useState instead useReducer\n\n  /* useEffect(() => {\n      if (submittedTodo)\n          //using useState\n          //setTodoList(todoList.concat(submittedTodo));\n           dispatch({ type: 'ADD', payload: submittedTodo });\n  }, [submittedTodo]); */\n\n  /* const inputChangeHandler = event => {\n      setTodoName(event.target.value);\n  } */\n\n  const todoAddHandler = () => {\n    const todoName = todoInputRef.current.value;\n    axios.post('https://todo-list-bb387.firebaseio.com/todos.json', {\n      name: todoName\n    }).then(res => {\n      console.log(res);\n      setTimeout(() => {\n        const todoItem = {\n          id: res.data.name,\n          name: todoName\n        }; //useState instead useReducer\n        //setSubmittedTodo(todoItem);\n\n        dispatch({\n          type: 'ADD',\n          payload: todoItem\n        });\n      }, 3000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const todoRemoveHandler = todoId => {\n    axios.delete(`https://todo-list-bb387.firebaseio.com/todos/${todoId}.json`).then(res => {\n      dispatch({\n        type: 'REMOVE',\n        payload: todoId\n      });\n      console.log(res);\n    }).catch(err => console.log(err));\n  };\n\n  const inputValidationHandler = event => {\n    if (event.target.value.trim() === '') setInputIsValid(false);else setInputIsValid(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Todo\",\n    ref: todoInputRef,\n    onChange: inputValidationHandler,\n    style: {\n      backgroundColor: inputIsValid ? 'transparent' : 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: todoAddHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Add\"), useMemo(() => /*#__PURE__*/React.createElement(List, {\n    items: todoList,\n    onClick: todoRemoveHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }), [todoList]));\n};\n\nexport default Todo;","map":{"version":3,"sources":["/Users/abdessamad/workspace/ReactJs/appone/src/components/Todo.js"],"names":["React","useState","useEffect","useReducer","useRef","useMemo","axios","List","useFormInput","Todo","props","inputIsValid","setInputIsValid","todoInputRef","todoListReducer","state","action","type","concat","payload","filter","todo","id","todoList","dispatch","get","then","result","console","log","todoData","data","todos","key","push","name","todoAddHandler","todoName","current","value","post","res","setTimeout","todoItem","catch","err","todoRemoveHandler","todoId","delete","inputValidationHandler","event","target","trim","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, useRef, useMemo } from 'react';\nimport axios from 'axios';\nimport List from './List';\n\nimport { useFormInput } from '../hooks/forms';\n\nconst Todo = props => {\n    //const [todoName, setTodoName] = useState('');\n\n    //useState instead useReducer\n    //const [todoList, setTodoList] = useState([]);\n    //const [submittedTodo, setSubmittedTodo] = useState(null);\n\n    const [inputIsValid, setInputIsValid] = useState(false);\n\n    const todoInputRef = useRef();\n\n    \n\n    const todoListReducer = (state, action) => {\n        switch (action.type) {\n            case 'ADD':\n                return state.concat(action.payload);\n            case 'SET':\n                return action.payload;\n            case 'REMOVE':\n                return state.filter((todo) => todo.id !== action.payload);\n            default:\n                return state;\n        }\n    }\n\n    const [todoList, dispatch] = useReducer(todoListReducer, []);\n\n    useEffect(() => {\n        axios.get('https://todo-list-bb387.firebaseio.com/todos.json')\n            .then(result => {\n                console.log(result);\n\n                const todoData = result.data;\n                const todos = [];\n                for (const key in todoData) {\n                    todos.push({ id: key, name: todoData[key].name })\n                }\n\n                //useState unstead useReducer\n                //setTodoList(todos);\n\n                //using useReducer\n                dispatch({ type: 'SET', payload: todos });\n            });\n        return () => {\n            console.log('Cleanup')\n        }\n    }, []);\n\n    //useState instead useReducer\n    /* useEffect(() => {\n        if (submittedTodo)\n            //using useState\n            //setTodoList(todoList.concat(submittedTodo));\n\n            dispatch({ type: 'ADD', payload: submittedTodo });\n    }, [submittedTodo]); */\n\n\n    /* const inputChangeHandler = event => {\n        setTodoName(event.target.value);\n    } */\n\n    const todoAddHandler = () => {\n        const todoName = todoInputRef.current.value;\n\n        axios.post('https://todo-list-bb387.firebaseio.com/todos.json', { name: todoName })\n            .then(res => {\n                console.log(res);\n\n                setTimeout(() => {\n\n                    const todoItem = { id: res.data.name, name: todoName };\n\n                    //useState instead useReducer\n                    //setSubmittedTodo(todoItem);\n\n                    dispatch({ type: 'ADD', payload: todoItem });\n                }, 3000);\n\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    const todoRemoveHandler = todoId => {\n        axios.delete(`https://todo-list-bb387.firebaseio.com/todos/${todoId}.json`)\n            .then(res => {\n                dispatch({ type: 'REMOVE', payload: todoId });\n                console.log(res);\n            })\n            .catch(err => console.log(err));\n    }\n\n    const inputValidationHandler = event => {\n        if (event.target.value.trim() === '')\n            setInputIsValid(false);\n        else\n            setInputIsValid(true);\n    }\n\n    return (\n        <React.Fragment>\n            {/*\n            without useRef\n            <input type=\"text\" placeholder=\"Todo\" onChange={inputChangeHandler} value={todoName} />\n            */}\n\n            <input\n                type=\"text\"\n                placeholder=\"Todo\"\n                ref={todoInputRef}\n                onChange={inputValidationHandler}\n                style={{ backgroundColor: inputIsValid ? 'transparent' : 'red' }}\n            />\n\n            <button type=\"button\" onClick={todoAddHandler}>Add</button>\n\n            {useMemo(() => (\n                <List items={todoList} onClick={todoRemoveHandler} />\n            ),\n                [todoList]\n            )}\n\n        </React.Fragment>\n    );\n};\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}