{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\appone\\\\src\\\\components\\\\Todo.js\";\nimport React, { useState, useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nconst Todo = props => {\n  const [todoName, setTodoName] = useState('');\n  const [submittedTodo, setSubmittedTodo] = useState(null); //const [todoList, setTodoList] = useState([]);\n\n  const todoListReducer = (state, action) => {\n    switch (action.type) {\n      case 'ADD':\n        return state.concat(action.payload);\n\n      case 'SET':\n        return action.payload;\n\n      case 'REMOVE':\n        return state.filter(todo => todo.id !== action.payload);\n\n      default:\n        return state;\n    }\n  };\n\n  const [todoList, dispatch] = useReducer(todoListReducer, []);\n  useEffect(() => {\n    axios.get('https://todo-list-bb387.firebaseio.com/todos.json').then(res => {\n      console.log('DATA: ', res);\n      const todoData = res.data;\n      const todos = [];\n\n      for (const key in todoData) {\n        todos.push({\n          id: key,\n          name: todoData[key].name\n        });\n      } //setTodoList(todos); using dispatch\n\n\n      dispatch({\n        type: 'SET',\n        payload: todos\n      });\n    });\n  }, []);\n  /*     useEffect(() => {\r\n          if (submittedTodo) {\r\n              //setTodoList(todoList.concat(submittedTodo)); using dispatch\r\n              dispatch({type: 'ADD', paylod: submittedTodo});\r\n              console.log('[in useEffect]', submittedTodo);\r\n          }\r\n      }, [submittedTodo]); */\n\n  const inputChangeHandler = event => {\n    setTodoName(event.target.value);\n  };\n\n  const todoAddHundler = () => {\n    axios.post('https://todo-list-bb387.firebaseio.com/todos.json', {\n      name: todoName\n    }).then(res => {\n      setTimeout(() => {\n        const todoItem = {\n          id: res.data.name,\n          name: todoName\n        };\n        dispatch({\n          type: 'ADD',\n          payload: todoItem\n        });\n      }, 3000);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return [/*#__PURE__*/React.createElement(\"input\", {\n    key: \"input\",\n    type: \"text\",\n    placeholder: \"Todo\",\n    onChange: inputChangeHandler,\n    value: todoName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    key: \"btn\",\n    type: \"button\",\n    onClick: todoAddHundler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"ul\", {\n    key: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, todoList.map(todo => /*#__PURE__*/React.createElement(\"li\", {\n    key: todo.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, todo.name)))];\n};\n\nexport default Todo;","map":{"version":3,"sources":["D:/workspace/appone/src/components/Todo.js"],"names":["React","useState","useEffect","useReducer","axios","Todo","props","todoName","setTodoName","submittedTodo","setSubmittedTodo","todoListReducer","state","action","type","concat","payload","filter","todo","id","todoList","dispatch","get","then","res","console","log","todoData","data","todos","key","push","name","inputChangeHandler","event","target","value","todoAddHundler","post","setTimeout","todoItem","catch","err","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Todo = props => {\r\n    const [todoName, setTodoName] = useState('');\r\n    const [submittedTodo, setSubmittedTodo] = useState(null);\r\n    //const [todoList, setTodoList] = useState([]);\r\n\r\n    const todoListReducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'ADD':\r\n                return state.concat(action.payload);\r\n            case 'SET':\r\n                return action.payload;\r\n            case 'REMOVE':\r\n                return state.filter((todo) => todo.id !== action.payload);\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n    const [todoList, dispatch] = useReducer(todoListReducer, []);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://todo-list-bb387.firebaseio.com/todos.json').then(res => {\r\n            console.log('DATA: ', res);\r\n\r\n            const todoData = res.data;\r\n            const todos = [];\r\n            for (const key in todoData) {\r\n                todos.push({ id: key, name: todoData[key].name })\r\n            }\r\n            \r\n            //setTodoList(todos); using dispatch\r\n            dispatch({type: 'SET', payload: todos});\r\n\r\n        });\r\n    }, []);\r\n\r\n/*     useEffect(() => {\r\n        if (submittedTodo) {\r\n            //setTodoList(todoList.concat(submittedTodo)); using dispatch\r\n            dispatch({type: 'ADD', paylod: submittedTodo});\r\n            console.log('[in useEffect]', submittedTodo);\r\n        }\r\n    }, [submittedTodo]); */\r\n\r\n    const inputChangeHandler = event => {\r\n        setTodoName(event.target.value);\r\n    };\r\n\r\n    const todoAddHundler = () => {\r\n        axios.post('https://todo-list-bb387.firebaseio.com/todos.json', { name: todoName })\r\n        .then(res => {\r\n            setTimeout(() => {\r\n              const todoItem = { id: res.data.name, name: todoName };\r\n              dispatch({ type: 'ADD', payload: todoItem });\r\n            }, 3000);\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n    };\r\n\r\n    return [\r\n        <input key=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Todo\"\r\n            onChange={inputChangeHandler}\r\n            value={todoName}\r\n        />,\r\n        <button key=\"btn\" type=\"button\" onClick={todoAddHundler}>Add</button>,\r\n        <ul key=\"ul\">\r\n            {todoList.map(todo => (\r\n                <li key={todo.id}>{todo.name}</li>\r\n            ))}\r\n        </ul>\r\n    ]\r\n\r\n};\r\n\r\nexport default Todo;\r\n\r\n"]},"metadata":{},"sourceType":"module"}