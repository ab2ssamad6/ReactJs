{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\appone\\\\src\\\\components\\\\Todo.js\";\nimport React, { useState } from 'react';\n\nconst Todo = props => {\n  const [todoName, setTodoName] = useState('');\n\n  const inputChangeHandler = event => {\n    inputState[1](event.target.value);\n  };\n\n  return [/*#__PURE__*/React.createElement(\"input\", {\n    key: \"input\",\n    type: \"text\",\n    placeholder: \"Todo\",\n    onChange: inputChangeHandler,\n    value: inputState[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    key: \"btn\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Add\"), /*#__PURE__*/React.createElement(\"ul\", {\n    key: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })];\n};\n\nexport default Todo;","map":{"version":3,"sources":["D:/workspace/appone/src/components/Todo.js"],"names":["React","useState","Todo","props","todoName","setTodoName","inputChangeHandler","event","inputState","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMK,kBAAkB,GAAGC,KAAK,IAAI;AAChCC,IAAAA,UAAU,CAAC,CAAD,CAAV,CAAcD,KAAK,CAACE,MAAN,CAAaC,KAA3B;AACH,GAFD;;AAIA,SAAO,cACH;AAAO,IAAA,GAAG,EAAC,OAAX;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,MAFhB;AAGI,IAAA,QAAQ,EAAEJ,kBAHd;AAII,IAAA,KAAK,EAAEE,UAAU,CAAC,CAAD,CAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,eAOH;AAAQ,IAAA,GAAG,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPG,eAQH;AAAI,IAAA,GAAG,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARG,CAAP;AAWH,CAlBD;;AAoBA,eAAeN,IAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Todo = props => {\r\n    const [todoName, setTodoName] = useState('');\r\n\r\n    const inputChangeHandler = event => {\r\n        inputState[1](event.target.value);\r\n    };\r\n\r\n    return [\r\n        <input key=\"input\"\r\n            type=\"text\"\r\n            placeholder=\"Todo\"\r\n            onChange={inputChangeHandler}\r\n            value={inputState[0]}\r\n            />,\r\n        <button key=\"btn\" type=\"button\">Add</button>,\r\n        <ul key=\"ul\"></ul>\r\n    ]\r\n\r\n};\r\n\r\nexport default Todo;"]},"metadata":{},"sourceType":"module"}