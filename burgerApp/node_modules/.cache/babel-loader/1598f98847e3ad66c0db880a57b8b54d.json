{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspace\\\\appone\\\\src\\\\components\\\\Todo.js\";\nimport React, { useMemo, useState, useRef, useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport List from './List';\nimport { useFormInput } from '../hooks/forms';\n\nconst Todo = props => {\n  const [inputIsValid, setInputIsValid] = useState(false); //const [todoName, setTodoName] = useState('');\n  //const [submittedTodo, setSubmittedTodo] = useState(null);\n  //const [todoList, setTodoList] = useState([]);\n  //const todoInputRef = useRef();\n\n  const todoInput = useFormInput();\n\n  const todoListReducer = (state, action) => {\n    switch (action.type) {\n      case 'ADD':\n        return state.concat(action.payload);\n\n      case 'SET':\n        return action.payload;\n\n      case 'REMOVE':\n        return state.filter(todo => todo.id !== action.payload);\n\n      default:\n        return state;\n    }\n  };\n\n  const [todoList, dispatch] = useReducer(todoListReducer, []);\n  useEffect(() => {\n    axios.get('https://todo-list-bb387.firebaseio.com/todos.json').then(res => {\n      console.log('DATA: ', res);\n      const todoData = res.data;\n      const todos = [];\n\n      for (const key in todoData) {\n        todos.push({\n          id: key,\n          name: todoData[key].name\n        });\n      } //setTodoList(todos); using dispatch\n\n\n      dispatch({\n        type: 'SET',\n        payload: todos\n      });\n    });\n  }, []);\n  /*     const inputChangeHandler = event => {\r\n          setTodoName(event.target.value);\r\n      }; */\n\n  const todoAddHundler = () => {\n    //const todoName = todoInputRef.current.value;\n    const todoName = todoInput.value;\n    axios.post('https://todo-list-bb387.firebaseio.com/todos.json', {\n      name: todoName\n    }).then(res => {\n      const todoItem = {\n        id: res.data.name,\n        name: todoName\n      }; //setSubmittedTodo(todoItem);\n\n      dispatch({\n        type: 'ADD',\n        payload: todoItem\n      });\n      console.log('RES: ', res);\n      console.log('todoItem: ', todoItem);\n    }).catch(err => {\n      console.log('ERR: ', err);\n    });\n  };\n\n  const todoRemoveHundler = todoId => {\n    axios.delete(`https://todo-list-bb387.firebaseio.com/todos/${todoId}.json`).then(res => {\n      dispatch({\n        type: 'REMOVE',\n        payload: todoId\n      });\n    }).catch(err => {\n      console.log('ERR: ', err);\n    });\n  };\n\n  const inputValidationHandler = event => {\n    if (event.target.value.trim() === '') setInputIsValid(false);else setInputIsValid(true);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    key: \"input\",\n    type: \"text\",\n    placeholder: \"Todo\" //ref={todoInputRef}\n    //onChange={inputValidationHandler}\n    ,\n    onChange: todoInput.onChange,\n    value: todoInput.value //style={{ backgroundColor: inputIsValid ? 'transparent' : 'red' }}\n    ,\n    style: {\n      backgroundColor: todoInput.valitidy === true ? 'transparent' : 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), \",\", /*#__PURE__*/React.createElement(\"button\", {\n    key: \"btn\",\n    type: \"button\",\n    onClick: todoAddHundler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Add\"), \",\", useMemo(() => /*#__PURE__*/React.createElement(List, {\n    key: \"list\",\n    items: todoList,\n    onClick: todoRemoveHundler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }), [todoList]));\n};\n\nexport default Todo;","map":{"version":3,"sources":["D:/workspace/appone/src/components/Todo.js"],"names":["React","useMemo","useState","useRef","useEffect","useReducer","axios","List","useFormInput","Todo","props","inputIsValid","setInputIsValid","todoInput","todoListReducer","state","action","type","concat","payload","filter","todo","id","todoList","dispatch","get","then","res","console","log","todoData","data","todos","key","push","name","todoAddHundler","todoName","value","post","todoItem","catch","err","todoRemoveHundler","todoId","delete","inputValidationHandler","event","target","trim","onChange","backgroundColor","valitidy"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,MAAnC,EAA2CC,SAA3C,EAAsDC,UAAtD,QAAwE,OAAxE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAClB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD,CADkB,CAElB;AACA;AACA;AACA;;AACA,QAAMW,SAAS,GAAGL,YAAY,EAA9B;;AAEA,QAAMM,eAAe,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvC,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,KAAL;AACI,eAAOF,KAAK,CAACG,MAAN,CAAaF,MAAM,CAACG,OAApB,CAAP;;AACJ,WAAK,KAAL;AACI,eAAOH,MAAM,CAACG,OAAd;;AACJ,WAAK,QAAL;AACI,eAAOJ,KAAK,CAACK,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACG,OAA1C,CAAP;;AACJ;AACI,eAAOJ,KAAP;AARR;AAUH,GAXD;;AAaA,QAAM,CAACQ,QAAD,EAAWC,QAAX,IAAuBnB,UAAU,CAACS,eAAD,EAAkB,EAAlB,CAAvC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACmB,GAAN,CAAU,mDAAV,EAA+DC,IAA/D,CAAoEC,GAAG,IAAI;AACvEC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,GAAtB;AAEA,YAAMG,QAAQ,GAAGH,GAAG,CAACI,IAArB;AACA,YAAMC,KAAK,GAAG,EAAd;;AACA,WAAK,MAAMC,GAAX,IAAkBH,QAAlB,EAA4B;AACxBE,QAAAA,KAAK,CAACE,IAAN,CAAW;AAAEZ,UAAAA,EAAE,EAAEW,GAAN;AAAWE,UAAAA,IAAI,EAAEL,QAAQ,CAACG,GAAD,CAAR,CAAcE;AAA/B,SAAX;AACH,OAPsE,CASvE;;;AACAX,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,KAAR;AAAeE,QAAAA,OAAO,EAAEa;AAAxB,OAAD,CAAR;AAEH,KAZD;AAaH,GAdQ,EAcN,EAdM,CAAT;AAgBA;;;;AAIA,QAAMI,cAAc,GAAG,MAAM;AACzB;AACA,UAAMC,QAAQ,GAAGxB,SAAS,CAACyB,KAA3B;AAEAhC,IAAAA,KAAK,CAACiC,IAAN,CAAW,mDAAX,EAAgE;AAAEJ,MAAAA,IAAI,EAAEE;AAAR,KAAhE,EACKX,IADL,CACUC,GAAG,IAAI;AACT,YAAMa,QAAQ,GAAG;AAAElB,QAAAA,EAAE,EAAEK,GAAG,CAACI,IAAJ,CAASI,IAAf;AAAqBA,QAAAA,IAAI,EAAEE;AAA3B,OAAjB,CADS,CAET;;AAEAb,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,KAAR;AAAeE,QAAAA,OAAO,EAAEqB;AAAxB,OAAD,CAAR;AAEAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BW,QAA1B;AACH,KATL,EASOC,KATP,CASaC,GAAG,IAAI;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBa,GAArB;AACH,KAXL;AAYH,GAhBD;;AAkBA,QAAMC,iBAAiB,GAAGC,MAAM,IAAI;AAChCtC,IAAAA,KAAK,CAACuC,MAAN,CAAc,gDAA+CD,MAAO,OAApE,EACKlB,IADL,CACUC,GAAG,IAAI;AACTH,MAAAA,QAAQ,CAAC;AAAEP,QAAAA,IAAI,EAAE,QAAR;AAAkBE,QAAAA,OAAO,EAAEyB;AAA3B,OAAD,CAAR;AACH,KAHL,EAGOH,KAHP,CAGaC,GAAG,IAAI;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBa,GAArB;AACH,KALL;AAMH,GAPD;;AASA,QAAMI,sBAAsB,GAAGC,KAAK,IAAI;AACpC,QAAIA,KAAK,CAACC,MAAN,CAAaV,KAAb,CAAmBW,IAAnB,OAA8B,EAAlC,EACIrC,eAAe,CAAC,KAAD,CAAf,CADJ,KAGIA,eAAe,CAAC,IAAD,CAAf;AACP,GALD;;AAOA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,GAAG,EAAC,OAAX;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,WAAW,EAAC,MAFhB,CAGI;AACA;AAJJ;AAKI,IAAA,QAAQ,EAAEC,SAAS,CAACqC,QALxB;AAMI,IAAA,KAAK,EAAErC,SAAS,CAACyB,KANrB,CAOI;AAPJ;AAQI,IAAA,KAAK,EAAE;AAAEa,MAAAA,eAAe,EAAEtC,SAAS,CAACuC,QAAV,KAAuB,IAAvB,GAA8B,aAA9B,GAA8C;AAAjE,KARX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,oBAWA;AAAQ,IAAA,GAAG,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAgC,IAAA,OAAO,EAAEhB,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXA,OAYCnC,OAAO,CAAC,mBACD,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,KAAK,EAAEsB,QAAxB;AAAkC,IAAA,OAAO,EAAEoB,iBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAED,CAACpB,QAAD,CAFC,CAZR,CADJ;AAmBH,CAhGD;;AAkGA,eAAed,IAAf","sourcesContent":["import React, { useMemo, useState, useRef, useEffect, useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport List from './List';\r\nimport { useFormInput } from '../hooks/forms';\r\n\r\nconst Todo = props => {\r\n    const [inputIsValid, setInputIsValid] = useState(false);\r\n    //const [todoName, setTodoName] = useState('');\r\n    //const [submittedTodo, setSubmittedTodo] = useState(null);\r\n    //const [todoList, setTodoList] = useState([]);\r\n    //const todoInputRef = useRef();\r\n    const todoInput = useFormInput();\r\n\r\n    const todoListReducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'ADD':\r\n                return state.concat(action.payload);\r\n            case 'SET':\r\n                return action.payload;\r\n            case 'REMOVE':\r\n                return state.filter((todo) => todo.id !== action.payload);\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n    const [todoList, dispatch] = useReducer(todoListReducer, []);\r\n\r\n    useEffect(() => {\r\n        axios.get('https://todo-list-bb387.firebaseio.com/todos.json').then(res => {\r\n            console.log('DATA: ', res);\r\n\r\n            const todoData = res.data;\r\n            const todos = [];\r\n            for (const key in todoData) {\r\n                todos.push({ id: key, name: todoData[key].name })\r\n            }\r\n\r\n            //setTodoList(todos); using dispatch\r\n            dispatch({ type: 'SET', payload: todos });\r\n\r\n        });\r\n    }, []);\r\n\r\n    /*     const inputChangeHandler = event => {\r\n            setTodoName(event.target.value);\r\n        }; */\r\n\r\n    const todoAddHundler = () => {\r\n        //const todoName = todoInputRef.current.value;\r\n        const todoName = todoInput.value;\r\n\r\n        axios.post('https://todo-list-bb387.firebaseio.com/todos.json', { name: todoName })\r\n            .then(res => {\r\n                const todoItem = { id: res.data.name, name: todoName };\r\n                //setSubmittedTodo(todoItem);\r\n\r\n                dispatch({ type: 'ADD', payload: todoItem });\r\n\r\n                console.log('RES: ', res);\r\n                console.log('todoItem: ', todoItem);\r\n            }).catch(err => {\r\n                console.log('ERR: ', err);\r\n            });\r\n    };\r\n\r\n    const todoRemoveHundler = todoId => {\r\n        axios.delete(`https://todo-list-bb387.firebaseio.com/todos/${todoId}.json`)\r\n            .then(res => {\r\n                dispatch({ type: 'REMOVE', payload: todoId });\r\n            }).catch(err => {\r\n                console.log('ERR: ', err);\r\n            });\r\n    };\r\n\r\n    const inputValidationHandler = event => {\r\n        if (event.target.value.trim() === '')\r\n            setInputIsValid(false);\r\n        else\r\n            setInputIsValid(true);\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <input key=\"input\"\r\n                type=\"text\"\r\n                placeholder=\"Todo\"\r\n                //ref={todoInputRef}\r\n                //onChange={inputValidationHandler}\r\n                onChange={todoInput.onChange}\r\n                value={todoInput.value}\r\n                //style={{ backgroundColor: inputIsValid ? 'transparent' : 'red' }}\r\n                style={{ backgroundColor: todoInput.valitidy === true ? 'transparent' : 'red' }}\r\n            />,\r\n        <button key=\"btn\" type=\"button\" onClick={todoAddHundler}>Add</button>,\r\n        {useMemo(() => (\r\n                <List key=\"list\" items={todoList} onClick={todoRemoveHundler} />\r\n            ), [todoList]\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Todo;\r\n\r\n"]},"metadata":{},"sourceType":"module"}